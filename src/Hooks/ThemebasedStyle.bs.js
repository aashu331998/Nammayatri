// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactNative from "react-native";
import * as LightDarkTheme from "./LightDarkTheme.bs.js";
import * as Color$ReactNative from "rescript-react-native/src/apis/Color.bs.js";

function getStrProp(overRideProp, defaultProp) {
  if (overRideProp !== undefined) {
    return Caml_option.valFromOption(overRideProp);
  } else {
    return defaultProp;
  }
}

function getStyleProp(override, fn, $$default) {
  if (override !== undefined) {
    return fn(Caml_option.valFromOption(override));
  } else {
    return $$default;
  }
}

var status_color = {
  green: {
    textColor: "#36AF47",
    backgroundColor: "rgba(54, 175, 71, 0.12)"
  },
  orange: {
    textColor: "#CA8601",
    backgroundColor: "rgba(202, 134, 1, 0.12)"
  },
  red: {
    textColor: "#EF6969",
    backgroundColor: "rgba(239, 105, 105, 0.12)"
  },
  blue: {
    textColor: "#0099FF",
    backgroundColor: "rgba(0, 153, 255, 0.12)"
  }
};

var styles = ReactNative.StyleSheet.create({
      light_bgColor: {
        backgroundColor: "#ffffff"
      },
      dark_bgColor: {
        backgroundColor: "#2e2e2e"
      },
      flatMinimal_bgColor: {
        backgroundColor: "rgba(107, 114, 128, 1)"
      },
      minimal_bgColor: {
        backgroundColor: "#ffffff"
      },
      light_bgTransparentColor: {
        backgroundColor: Color$ReactNative.rgba(0, 0, 0, 0.2)
      },
      dark_bgTransparentColor: {
        backgroundColor: Color$ReactNative.rgba(0, 0, 0, 0.2)
      },
      flatMinimal_bgTransparentColor: {
        backgroundColor: Color$ReactNative.rgba(0, 0, 0, 0.2)
      },
      minimal_bgTransparentColor: {
        backgroundColor: Color$ReactNative.rgba(0, 0, 0, 0.2)
      },
      light_textPrimary: {
        color: "#0570de"
      },
      dark_textPrimary: {
        color: "#FFFFFF"
      },
      flatMinimal_textPrimary: {
        color: "#e0e0e0"
      },
      minimal_textPrimary: {
        color: "black"
      },
      light_textSecondary: {
        color: "hsla(0,0%, 10% , 0.5 )"
      },
      dark_textSecondary: {
        color: "#F6F8F9"
      },
      flatMinimal_textSeconadry: {
        color: "#F6F8FA"
      },
      minimal_textSeconadry: {
        color: "blue"
      },
      light_textSecondary_Bold: {
        color: "hsla(0,0%, 10% , 0.7 )"
      },
      dark_textSecondaryBold: {
        color: "#F6F8F9"
      },
      flatMinimal_textSeconadryBold: {
        color: "#F6F8FA"
      },
      minimal_textSeconadryBold: {
        color: "blue"
      },
      light_textInputBg: {
        backgroundColor: "#ffffff"
      },
      dark_textInputBg: {
        backgroundColor: "#444444"
      },
      flatMinimal_textInputBg: {
        backgroundColor: "black"
      },
      minimal_textInputBg: {
        backgroundColor: "white"
      },
      light_boxColor: {
        backgroundColor: "#FFFFFF"
      },
      dark_boxColor: {
        backgroundColor: "#191A1A"
      },
      flatMinimal_boxColor: {
        backgroundColor: "#191A1A"
      },
      minimal_boxColor: {
        backgroundColor: "#191A1A"
      },
      light_boxBorderColor: {
        borderColor: "#e4e4e5"
      },
      dark_boxBorderColor: {
        borderColor: "#79787d"
      },
      flatMinimal_boxBorderColor: {
        borderColor: "#3541ff"
      },
      minimal_boxBorderColor: {
        borderColor: "#e4e4e5"
      }
    });

var darkRecord_bgColor = styles.dark_bgColor;

var darkRecord_bgTransparentColor = styles.dark_bgTransparentColor;

var darkRecord_textPrimary = styles.dark_textPrimary;

var darkRecord_textSecondary = styles.dark_textSecondary;

var darkRecord_textSecondaryBold = styles.dark_textSecondaryBold;

var darkRecord_textInputBg = styles.dark_textInputBg;

var darkRecord_filterOptionTextColor = [
  "rgba(246, 248, 249, 0.8)",
  "#F6F8F9"
];

var darkRecord_boxColor = styles.dark_boxColor;

var darkRecord_boxBorderColor = styles.dark_boxBorderColor;

var darkRecord_dropDownSelectAll = [
  [
    "#202124",
    "#202124",
    "#202124"
  ],
  [
    "#202124",
    "#202124",
    "#202124"
  ]
];

var darkRecord_fadedColor = [
  "rgba(0, 0, 0, 0.75)",
  "rgba(0, 0, 0,1)"
];

var darkRecord_shimmerColor = [
  "#191A1A",
  "#232424"
];

var darkRecord_toastColorConfig = {
  textColor: "#FFFFFF",
  backgroundColor: "#343434"
};

var darkRecord_component = {
  background: Color$ReactNative.rgb(57, 57, 57),
  borderColor: "#e6e6e650",
  dividerColor: "#e6e6e6",
  color: "#ffffff"
};

var darkRecord_paypalButonColor = [
  "#ffffff",
  "#ffffff"
];

var darkRecord_applePayButtonColor = [
  "#000000",
  "#000000"
];

var darkRecord_googlePayButtonColor = [
  "#000000",
  "#000000"
];

var darkRecord_payNowButtonColor = [
  "#0057c7",
  "#0057c7"
];

var darkRecord = {
  platform: "android",
  bgColor: darkRecord_bgColor,
  paymentSheetOverlay: "#00000025",
  loadingBgColor: "#3e3e3e90",
  loadingFgColor: "#2e2e2e",
  bgTransparentColor: darkRecord_bgTransparentColor,
  textPrimary: darkRecord_textPrimary,
  textSecondary: darkRecord_textSecondary,
  textSecondaryBold: darkRecord_textSecondaryBold,
  placeholderColor: "#F6F8F940",
  textInputBg: darkRecord_textInputBg,
  iconColor: "rgba(246, 248, 249, 0.25)",
  lineBorderColor: "#2C2D2F",
  linkColor: "#0099FF",
  disableBgColor: "#202124",
  filterHeaderColor: "rgba(246, 248, 249, 0.75)",
  filterOptionTextColor: darkRecord_filterOptionTextColor,
  tooltipTextColor: "#191A1A75",
  tooltipBackgroundColor: "#F7F8FA",
  boxColor: darkRecord_boxColor,
  boxBorderColor: darkRecord_boxBorderColor,
  dropDownSelectAll: darkRecord_dropDownSelectAll,
  fadedColor: darkRecord_fadedColor,
  status_color: status_color,
  detailViewToolTipText: "rgba(25, 26, 26, 0.75)",
  summarisedViewSingleStatHeading: "#F6F8F9",
  switchThumbColor: "#f4f3f4",
  shimmerColor: darkRecord_shimmerColor,
  lastOffset: "#1B1B1D",
  dangerColor: "#EF6969",
  orderDisableButton: "#F6F8F9",
  toastColorConfig: darkRecord_toastColorConfig,
  primaryColor: "#0057c7",
  borderRadius: 7.0,
  borderWidth: 0.5,
  buttonBorderRadius: 4.0,
  buttonBorderWidth: 0.5,
  component: darkRecord_component,
  paypalButonColor: darkRecord_paypalButonColor,
  applePayButtonColor: darkRecord_applePayButtonColor,
  googlePayButtonColor: darkRecord_googlePayButtonColor,
  payNowButtonColor: darkRecord_payNowButtonColor,
  payNowButtonTextColor: "#FFFFFF",
  payNowButtonBorderColor: "#e6e6e650",
  payNowButtonShadowColor: "black",
  payNowButtonShadowIntensity: 2,
  focusedTextInputBoderColor: "#0057c7",
  errorTextInputColor: "rgba(0, 153, 255, 1)",
  normalTextInputBoderColor: "rgba(204, 210, 226, 0.75)",
  shadowColor: "black",
  shadowIntensity: 2
};

var lightRecord_bgColor = styles.light_bgColor;

var lightRecord_bgTransparentColor = styles.light_bgTransparentColor;

var lightRecord_textPrimary = styles.light_textPrimary;

var lightRecord_textSecondary = styles.light_textSecondary;

var lightRecord_textSecondaryBold = styles.light_textSecondary_Bold;

var lightRecord_textInputBg = styles.light_textInputBg;

var lightRecord_filterOptionTextColor = [
  "#354052",
  "rgba(53, 64, 82, 0.8)"
];

var lightRecord_boxColor = styles.light_boxColor;

var lightRecord_boxBorderColor = styles.light_boxBorderColor;

var lightRecord_dropDownSelectAll = [
  [
    "#E7EAF1",
    "#E7EAF1",
    "#E7EAF1"
  ],
  [
    "#F1F5FA",
    "#FDFEFF",
    "#F1F5FA"
  ]
];

var lightRecord_fadedColor = [
  "#CCCFD450",
  "rgba(53, 64, 82, 0.5)"
];

var lightRecord_shimmerColor = [
  "#EAEBEE",
  "#FFFFFF"
];

var lightRecord_toastColorConfig = {
  textColor: "#F5F7FC",
  backgroundColor: "#2C2D2F"
};

var lightRecord_component = {
  background: "#FFFFFF",
  borderColor: "rgb(226,226,228)",
  dividerColor: "#e6e6e6",
  color: "#000000"
};

var lightRecord_paypalButonColor = [
  "#F6C657",
  "#F6C657"
];

var lightRecord_applePayButtonColor = [
  "#000000",
  "#000000"
];

var lightRecord_googlePayButtonColor = [
  "#000000",
  "#000000"
];

var lightRecord_payNowButtonColor = [
  "#006DF9",
  "#006DF9"
];

var lightRecord = {
  platform: "android",
  bgColor: lightRecord_bgColor,
  paymentSheetOverlay: "#00000070",
  loadingBgColor: "rgb(244,244,244)",
  loadingFgColor: "rgb(250,250,250)",
  bgTransparentColor: lightRecord_bgTransparentColor,
  textPrimary: lightRecord_textPrimary,
  textSecondary: lightRecord_textSecondary,
  textSecondaryBold: lightRecord_textSecondaryBold,
  placeholderColor: "#00000070",
  textInputBg: lightRecord_textInputBg,
  iconColor: "rgba(53, 64, 82, 0.25)",
  lineBorderColor: "#CCD2E250",
  linkColor: "#0099FF",
  disableBgColor: "#ECECEC",
  filterHeaderColor: "#666666",
  filterOptionTextColor: lightRecord_filterOptionTextColor,
  tooltipTextColor: "#F6F8F975",
  tooltipBackgroundColor: "#191A1A",
  boxColor: lightRecord_boxColor,
  boxBorderColor: lightRecord_boxBorderColor,
  dropDownSelectAll: lightRecord_dropDownSelectAll,
  fadedColor: lightRecord_fadedColor,
  status_color: status_color,
  detailViewToolTipText: "rgba(246, 248, 249, 0.75)",
  summarisedViewSingleStatHeading: "#354052",
  switchThumbColor: "white",
  shimmerColor: lightRecord_shimmerColor,
  lastOffset: "#FFFFFF",
  dangerColor: "#FF3434",
  orderDisableButton: "#354052",
  toastColorConfig: lightRecord_toastColorConfig,
  primaryColor: "#006DF9",
  borderRadius: 7.0,
  borderWidth: 1,
  buttonBorderRadius: 4.0,
  buttonBorderWidth: 0.0,
  component: lightRecord_component,
  paypalButonColor: lightRecord_paypalButonColor,
  applePayButtonColor: lightRecord_applePayButtonColor,
  googlePayButtonColor: lightRecord_googlePayButtonColor,
  payNowButtonColor: lightRecord_payNowButtonColor,
  payNowButtonTextColor: "#FFFFFF",
  payNowButtonBorderColor: "#ffffff",
  payNowButtonShadowColor: "black",
  payNowButtonShadowIntensity: 2,
  focusedTextInputBoderColor: "#006DF9",
  errorTextInputColor: "rgba(0, 153, 255, 1)",
  normalTextInputBoderColor: "rgba(204, 210, 226, 0.75)",
  shadowColor: "black",
  shadowIntensity: 2
};

function useThemeBasedStyle() {
  var isDarkMode = LightDarkTheme.useIsDarkMode();
  if (isDarkMode) {
    return darkRecord;
  } else {
    return lightRecord;
  }
}

export {
  getStrProp ,
  getStyleProp ,
  status_color ,
  styles ,
  darkRecord ,
  lightRecord ,
  useThemeBasedStyle ,
}
/* styles Not a pure module */
