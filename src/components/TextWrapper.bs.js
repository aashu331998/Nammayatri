// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactNative from "react-native";
import * as ThemebasedStyle from "../Hooks/ThemebasedStyle.bs.js";
import * as JsxRuntime from "react/jsx-runtime";

function TextWrapper(props) {
  var children = props.children;
  var textType = props.textType;
  var text = props.text;
  var match = ThemebasedStyle.useThemeBasedStyle();
  var textSecondaryBold = match.textSecondaryBold;
  var textSecondary = match.textSecondary;
  var renderStyle;
  if (typeof textType !== "object") {
    switch (textType) {
      case "HeadingBold" :
          renderStyle = [
            textSecondaryBold,
            {
              fontSize: 17,
              fontWeight: 500,
              letterSpacing: 0.3
            }
          ];
          break;
      case "Subheading" :
          renderStyle = [
            textSecondaryBold,
            {
              fontSize: 15
            }
          ];
          break;
      case "SubheadingBold" :
          renderStyle = [
            textSecondaryBold,
            {
              fontSize: 15,
              fontWeight: 500
            }
          ];
          break;
      case "ModalText" :
          renderStyle = [
            {
              fontSize: 14,
              letterSpacing: 0.5
            },
            textSecondary
          ];
          break;
      case "ModalTextBold" :
          renderStyle = [
            {
              fontSize: 14
            },
            textSecondary
          ];
          break;
      case "CardText" :
          renderStyle = [{
              color: match.component.color,
              fontSize: 15,
              fontWeight: 400
            }];
          break;
      case "TextActive" :
          renderStyle = [
            {
              fontSize: 14,
              fontWeight: 500
            },
            match.textPrimary
          ];
          break;
      
    }
  } else {
    renderStyle = [textType._0];
  }
  return JsxRuntime.jsxs(ReactNative.Text, {
              children: [
                text !== undefined ? text : null,
                children !== undefined ? Caml_option.valFromOption(children) : null
              ],
              style: [
                {},
                renderStyle
              ]
            });
}

var make = TextWrapper;

export {
  make ,
}
/* react-native Not a pure module */
